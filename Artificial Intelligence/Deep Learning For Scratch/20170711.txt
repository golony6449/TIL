이어서
Chapter 7 합성곱 신경망(CNN) - Convolutional Neural Network

합성곱(Convolution) 계층 구현
1. im2col 함수를 이용해 데이터 전개
2. 필터를 입력데이터에 맞춰서 2차원 배열로 정렬(shape(FN,-1))
3. 내적 계산
4. 적절한 모양으로 reshape

(최대)풀링(polling) 계층 구현
1. im2col 함수를 이용해 데이터 전개 (채널별로 독립적으로 전개)
2. 행별 최댓값 구함
3. 적절한 모양으로 reshape

CNN 구현
네트워크 생성 -> 오차역전파법이용, 기울기 계산

CNN 시각화
* 1번째 층의 가중치 시각화
에지(색상이 바뀌는 경계선), 블롭(국소적으로 덩어리진 영역)에 반응하는 정보 추출

* 층의 깊이에 따른 추출 정보 변화
계층이 깊어질수록 추출되는 정보는 더 추상화 됨 
(반응 대상이 단순모양 -> 고급정보(물체)로 변화)

ex)
Conv 1. 엣지, 블롭 추출
Conv 3. 텍스쳐(질감)
Conv 5. 물체의 일부
Softmax(완전연결계층) 사물의 클래스

* 대표적인 CNN
LeNet: 손글씨 인식 네트워크
합성곱 -> 풀링 계층 반복 ->> ... >> 완전연결계층 -> 결과

현재의 CNN과의 차이점
| 차이점 | '현재' | LeNet |
|-------|--------|-------|
| 활성화 함수 | ReLU | Sigmoid |
| 샘플링 | 서브샘플링(중간데이터 크기 감소) | 최대풀링 |

AlexNet

LeNet과의 차이점
1. 활성화 함수로 ReLU 사용
2. LRN(Local Response Normalization) 계층 사용(국소적 정규화 실시)
3. 드롭아웃 사용


Chapter 8 딥러닝 (Deep Learning)
정의: 층을 깊게한 심층 신경망




numpy
np.max(axis=n): 지정된 축 마다의 최대값 계산
ex) 2차원 배 열일때
axis==0: 행 방향
axis==1: 열방향

