Chapter 8 딥러닝(Deep Learning)

딥러닝: 층을 깊게 한 심층 신경망

8장에서의 딥러닝 신경망의 특징
1. 3 x 3의 작은 필터를 사용한 합성곱 계층
2. ReLU를 활성화 함수로 사용
3. 완전연결 계층 뒤에 Dropout 계층 사용
4. Adam을 사용해 최적화
5. 가중치의 초기값은 He의 초기값

정확도를 높히려면?
기법: 앙상블 학습, 학습률 감소, 데이터 확장등 여러 기법 존재

* 데이터 확장 기법
입력이미지를 여러 알고리즘을 동원해 확장
알고리즘: 회전, 이동, 스케일 변경, 크롭, 플립
(단, 플립은 이미지의 대칭성을 고려하지 않아도 되는 경우만!)

깊게 하는 이유?
이론적인 근거는 아직 부족, 하지만 연구, 실험 결과를 바탕으로 설명은 일부분 가능
1. ILSVRC등의 이미지 인식대회에서 상위 성적의 기법의 대부분은 딥러닝(더더욱 깊게 만드는 추세)

2. 깊게 만들 수록 매개변수 갯수가 줄어듦 
작은 필터를 여러개 사용: 단층 5x5(25개) = 2층 3x3(18개)
==> 매개변수 갯수를 줄여, 넓은 수용영역을 소화 할 수 있음

3. 학습의 효율성 증대 -> 학습데이터 양을 줄여서 학습을 빠르게 수행 할 수 있음
3.1. 깊이가 얕은 경우 -> 여러가지 특징을 한번에 '이해'해야 함 -> 많은 양의 변화가 큰 데이터가 필요 -> 학습시간 장기화
3.2. 깊이가 깊은 경우 -> 문제를 계층적으로 분해 -> 각층이 이해해야할 특징 단순화

4. 정보를 계층적으로 전달 가능
에지를 추출한 층의 다음 층은 에지정보를 사용 할 수 있음 -> 더 고도의 패턴의 효과적 학습 기대가능

딥러닝의 초기역사
이미지넷(ImageNet): 100만장이 넘는 이미지를 담고 있는 데이터셋
* 대회 종목: 분류 - 1000개의 클래스를 제대로 분류하는지를 겨루는 종목

* Top-5 에러 - 확률이 가장 높다고 생각하는 후보 클래스 5개 안에 정답이 포함되지 않은 비율

VGG
합성곱, 풀링계층으로 구성되는 기본적인 CNN
단, 합성곱, 완전연결계층을 16(VGG16) or 19(VGG19)층으로 심화한 것이 특징
3x3의 작은 필터를 사용한 합성곱계층을 연속으로 거침
성능은 GoogLeNet에 뒤지지만, 구성이 간단해 응용하기 편리

GoogLeNet
세로방향 뿐 아니라 가로 방향으로도 깊다는 점이 특징
인셉션구조: 가로방향에 '폭'이 있음 -> 크기가 다른 필터(풀링) 여러개 적용, 그 결과를 결합
1x1의 필터를 채널크기를 줄이기 위해 여러곳에서 사용 -> 매개변수제거, 고속처리에 기여

ResNet
MS에서 개발한 네트워크
딥러닝에서 층이 지나치게 깊으면 학습이 잘 되지 않거나, 오히려 성능이 떨어질수도 있음
이를 해결 하기 위해 <b>스킵연결</b>을 도입

스킵연결: 입력데이터를 합성곱계층을 뛰어넘어 출력에 바로 더하는 구조 
(역전파 시점에도 합성곱계층을 뛰어넘어 전달 함으로서, 의미있는 기울기를 전달해, 층이 깊을수록 기울기가 작아지는 소실 문제 대처 가능)

더 빠르게(고속화)
목적: 소요시간의 90%이상을 차지하는 Conv 연산을 어떻게 고속으로 처리 할 것인가?

GPU활용
병렬수치연산(대량의 단일 곱센누산)은 GPU가 더 유리
(CPU는 연속적인 복잡한 계산에 적합)
CUDA 기반의 cuDNN

분산학습
학습의 수평확장
다수의 GPU, 기기로 계산을 분산
계산을 어떻게 분산시킬것인가는 어려운 문제 -> 프레임워크를 도입해 해결하는 것이 바람직

연산정밀도, 비트 줄이기
32, 64비트 부동소수점은 계산오차를 줄일수는 있지만, 계산에 드는 비용(대역폭, 메모리 사용량) 증가
딥러닝은 높은 수치정밀도를 요구하지 않음(신경망의 견고함에 따른 특성)
16비트 반정밀도를 사용해도 학습에 문제가 없다고 알려져있음

딥러닝의 활용
* 사물검출
이미지 속에 담긴  사물의 위치, 종류를 알아내는 기술
대표적 수행 방식: R-CNN
R-CNN 처리흐름
1. 입력이미지
2. 후보영역추출 (일반적인 CV분야 기법, Selective Search 기법 사용, Faster CNN 기법)
3. CNN 특징 계산
4. 영역분류

* 분할
이미지를 픽셀수준에서 분류하는 문제
단순한 방법: 모든 픽셀 각각을 추론 -> 픽셀 수 만큼 forward 처리 -> 많은 시간 소요시간
FCN(Fully Convolutional Network) 도입 -> 1번의 forward 처리로 모든 픽셀의 클래스 분류

| CNN | FCN |
|-----|-----|
| 완전연결계층 | 같은 기능을 하는 합성곱계층 |
| 데이터 공간을 1차원으로 변환 | 공간 볼륨을 유지한 채 마지막 출력까지 처리 |
|  | 마지막에 공간 크기 확대 처리 도입 |
|  | (이중 선형 보간) |

* 사진캡션 생성
